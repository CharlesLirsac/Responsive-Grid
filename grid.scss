@charset 'UTF-8' ;
@import "compass" ;
@import "compass/css3" ;

//	Grid variables
//	-------------------------

//Grid full size
$grid-max-width : 1196; //	Full with in px
$grid-gutter : 16;	//	Gutter size at full width in px
$grid-gutter-relative : 100% * $grid-gutter / $grid-max-width;
//Grid columns
$grid-columns : 12;
//Base width (one column)
$grid-base-width : (100% - (($grid-columns - 1) * $grid-gutter-relative)) / $grid-columns;
// Mobile breakpoints
$grid-breakpoint : 640px;

//	Grid containers
//	-------------------------

.row,
.row--full,
div[class^="column-"]
{
	@include box-sizing(border-box) ;
}

.row, .row--full{
	width : 100%;
	margin:0 auto;
	&{ *zoom: 1;}
  &:before, &:after{
    content: "";
    display: table;
  }
  &:after{
    clear: both;
	}
}
.row{
	max-width : $grid-max-width * 1px;
}

div[class^="column-"]{
	display: block;
	float: left;
	margin-right : $grid-gutter-relative;	//	Assymetric Margin

	//	Ending rows
	//	Should work without using the .last class, but for older browsers that do not support :last-of-type or if you encounter any issue, try using it on your last columnn to remove the last margin and avoid offsetting the whole grid
	//	Replace twelve with number of columns

	&:last-of-type{
		margin-right:0;
	}

	//	Objects inside columns
	//	-------------------------

	img,
	object,
	embed{
		max-width: 100%;
		height: auto;
	}
}

//	Column widths
//	-------------------------
//
//	Add new column with
//
//	&.num	{width : num	*	$grid-base-width	+	( num - 1 )	*	$grid-gutter-relative	;	}
//
//	The default grid is 12 columns wide but you can make it whatever you want
//	Just don't forget to extend the class
//	Don't forget to change the last column index to remove right margin

.column-one	{width : 1	*	$grid-base-width	;	}
.column-two	{width : 2	*	$grid-base-width	+	1	*	$grid-gutter-relative	;	}
.column-three	{width : 3 	* 	$grid-base-width	+	2	*	$grid-gutter-relative	;	}
.column-four	{width : 4	*	$grid-base-width	+	3	*	$grid-gutter-relative	;	}
.column-five	{width : 5	* 	$grid-base-width	+	4	*	$grid-gutter-relative	;	}
.column-six	{width : 6	* 	$grid-base-width	+	5	*	$grid-gutter-relative	;	}
.column-seven	{width : 7	* 	$grid-base-width	+	6	*	$grid-gutter-relative	;	}
.column-eight	{width : 8	* 	$grid-base-width	+	7	*	$grid-gutter-relative	;	}
.column-nine	{width : 9	* 	$grid-base-width	+	8	*	$grid-gutter-relative	;	}
.column-ten	{width : 10	* 	$grid-base-width	+	9	*	$grid-gutter-relative	;	}
.column-eleven{width : 11	* 	$grid-base-width	+	10	*	$grid-gutter-relative	;	}
.column-twelve{width : 12	* 	$grid-base-width	+	11	*	$grid-gutter-relative	;	}

//	Offseting columns
//	-------------------------

//	You can add offsets classes the same way you add column widths
.offset-by-one	{margin-left:	1	*	( $grid-base-width + $grid-gutter-relative )	;	}
.offset-by-two	{margin-left:	2	*	( $grid-base-width + $grid-gutter-relative )	;	}
.offset-by-three	{margin-left:	3	*	( $grid-base-width + $grid-gutter-relative )	;	}
.offset-by-four	{margin-left:	4	*	( $grid-base-width + $grid-gutter-relative )	;	}
.offset-by-five	{margin-left:	5	*	( $grid-base-width + $grid-gutter-relative )	;	}
.offset-by-six	{margin-left:	6	*	( $grid-base-width + $grid-gutter-relative )	;	}
.offset-by-seven	{margin-left:	7	*	( $grid-base-width + $grid-gutter-relative )	;	}
.offset-by-eight	{margin-left:	8	*	( $grid-base-width + $grid-gutter-relative )	;	}
.offset-by-nine	{margin-left:	9	*	( $grid-base-width + $grid-gutter-relative )	;	}
.offset-by-ten	{margin-left:	10	*	( $grid-base-width + $grid-gutter-relative )	;	}
.offset-by-eleven	{margin-left:	11	*	( $grid-base-width + $grid-gutter-relative )	;	}

//	Mobile only classes
//	-------------------------

.no-mobile{
	display:block;			//Add this class to hide elements on mobile viewport
}

.mobile-only{
	display:none;			//And this one to only display element on mobile viewport
}

//	Mobile media query
//	-------------------------

@media screen and (max-width: $grid-breakpoint) {

	div[class^="column-"]{
		width:100%;
		margin: 1px 0;
	}
	div[class^="offset-by-"]{
		margin: 0;
	}

	.no-mobile{
		display: none;
	}

	.mobile-only{
		display:block;
	}
}